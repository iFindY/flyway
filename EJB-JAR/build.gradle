apply plugin: 'java'
apply plugin: 'ear'

setGroup('de.arkadi')
setDescription('This is a migration prototype')
setVersion('1.1')
setBuildDir('out')
setDefaultTasks(['flyEar'])
setSourceCompatibility('1.8')
setTargetCompatibility('1.8')

compileJava.options.debugOptions.debugLevel = "source,lines,vars"
compileTestJava.options.debugOptions.debugLevel = "source,lines,vars"


repositories {
    mavenCentral()
}

configurations {
    artifacts {
        transitive = false
    }
}


dependencies {
    compileOnly('javax:javaee-api:7.0')
    compile('org.slf4j:slf4j-api:1.7.25')
    compile('org.flywaydb:flyway-core:5.2.0')
    earlib('org.flywaydb:flyway-core:5.2.0')
    artifacts fileTree(dir: 'out/libs', include: '*.jar')
}


sourceSets {
    main {
        java {
            srcDirs = ['src/java']
        }
    }
    assets {
        resources {
            srcDirs = ['src/resources']
        }
    }
    artifacts {
        libsDirName = 'libs'
    }
}


compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8
    options.deprecation = false
    options.warnings = false
    options.fork = true
    options.forkOptions.executable = 'javac'
    print options.compilerArgs

}


task flyJar(type: Jar, dependsOn: classes) {

    setBaseName('flyway')
    setClassifier('ejb')

    from(sourceSets.main.output)

    metaInf {
        from(sourceSets.assets.resources) {
            rename '(.*)_(.*).sql', '$2__$1.sql'
        }
    }

    manifest {
        attributes('Tool-Version': this.version)
        attributes('Description': this.description)
        attributes('Class-Path': configurations.earlib.files.collect { 'lib/' + it.name }.join(' '))
    }

}

task flyEar(type: Ear) {
    //exclude("de/**")

    from(configurations.artifacts)

    deploymentDescriptor {
        applicationName = "flyway"
        displayName = "flyway"
        module("flyway-1.1-ejb.jar", "java")
    }
}

task flyClean(type: Delete) {
    delete(sourceSets.main.output.find { 'classes' })

}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

flyEar.dependsOn(flyJar)
flyEar.dependsOn(flyClean)
flyClean.shouldRunAfter(flyJar)




